import math
import collections

n=input("Numerator: ")
d=int(input("Denominator: "))

i=[int(b) for b in str(n)] #turns the numbers into lists e.g. 11 into [1,1]
z=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0] 
#at that point 11 is the same as 11.00000, just makes the program run better
i+=z
l=len(i)
remain=[]
print(i)
r=2

while r != 0:
    for x in range(0,l-1):
        number= 10*i[x]+i[x+1] #recursion part of the program takes 10 times f(n) and adds with f(n-1)
        print(number)
        r=number % d #finds the remainder
        print(r)
        if r< 10:
            remain.append(r) #puts it into a list
            print(remain)
        if r==0:
            break
        repint=[item for item, count in collections.Counter(remain).items() if count > 1]
        let=len(repint)
        if let !=0:
            break
        
        


